#!/usr/bin/perl

# This is the beginnings of utility to kick off training.  The TransmissionIdentifier module
# will be used for classification in another program.

use warnings;
use strict;

use Pod::Usage;
use Getopt::Long qw(HelpMessage);

use feature 'say';

use FindBin;
BEGIN { unshift @INC, "$FindBin::Bin/../lib" }

use TransmissionIdentifier;

use Data::Dumper;

GetOptions(
    'train'          => \( my $train        = 0 ),
    'info'           => \( my $info         = 0 ),
    'classify'       => \( my $classify     = 0 ),
    'lr=f'           => \( my $lr           = 0.001 ),
    'log-interval=i' => \( my $log_interval = 20 ),
    'momentum=f'     => \( my $momentum     = 0.9 ),
    'hybridize=i'    => \( my $hybridize    = 0 ),
    'cuda=i'         => \( my $cuda         = 0 ),
    'load_params=i'  => \( my $load_params  = 0 ),
    'batch-size=i'   => \( my $batch_size   = 1 ),
    'epochs=i'       => \( my $epochs       = 20 ),
    );

my $transid;

if ($train) {
    $transid = TransmissionIdentifier->new( { hybridize => 0, load_params => 0, batch_size => 1 } );
    $transid->train;
}

if ($info) {
    $transid = TransmissionIdentifier->new( { hybridize => 0, load_params => 0, batch_size => 1 } );
    say $transid->net;
    $transid->info;
}

if ($classify) {
    $transid = TransmissionIdentifier->new( { hybridize => 0, load_params => 1, batch_size => 1 } );

    my $detect = $transid->classify(
        input => 'samples/voice1.wav'
    );
    say sprintf('voice file classification: %s', Dumper($detect));

    $detect = $transid->is_voice(
        input => 'training/test/voice/461.080_1533496176.wav.png'
    );
    say sprintf('is this voice file a voice?: %d', $detect);

    $detect = $transid->is_voice(
        input =>  'training/test/data/461.205_1533495707.wav.png'
    );
    say sprintf('is this data file a voice?: %d', $detect);

    $detect = $transid->is_voice(
        input =>  'samples/voice1.wav'
    );
    say sprintf('is this voice file a voice?: %d', $detect);
}

